
# 2번 풀이와 비슷 함

# 0번째 비트열은 1
# 1번째 비트열은 11011
# 2번째 비트열은 1101111011000001101111011

# 여기서 0의 위치는 [2, 7, 10~14, 17, 22]
# 이 0의 위치를 5진수로 나타내면 [002, 012, 020~024, 032, 042]

# 이제 3번째 비트열은 1개의 숫자가 5개의 숫자로 치환되므로, 수열의 길이가 5배가 된다
# [0002, 0012, 0020~0024, 0032, 0042, 0120 ...]

# 이렇게 패턴을 쭉 살펴보면, 5진수로 변경했을 때 2가 포함되면 그자리에 0이 있는 자리가 된다
# 즉, 인덱스를 5로 나눌수 없을 때 까지 계속 나누는데 한번이라도 나머지가 2가 나오면 그자리엔 0이 있다는 뜻

# 솔직히,,혼자 패턴 찾으라했으면 절대 못찾았을듯,,

def check(num):
    while num >= 5:
        if (num - 2) % 5 == 0:
            return False
        num //= 5
    return num != 2

def solution(n, l, r):
    answer = 0
    for i in range(l - 1, r):
        if check(i):
            answer += 1
    return answer

n, l, r = 2, 4, 17
print(solution(n, l, r))